import re
import google.generativeai as genai
import json
from dotenv import load_dotenv
import os


load_dotenv()
api_key = os.getenv("GENAI_API_KEY")

genai.configure(api_key=api_key)
model = genai.GenerativeModel("gemini-2.5-flash-lite")


def classify_intent(message):
    prompt = f"""
        Ban l√† m·ªôt tr·ª£ l√Ω ·∫£o cho c·ª≠a h√†ng s√°ch tr·ª±c tuy·∫øn.
        Ph√¢n lo·∫°i tin nh·∫Øn sau th√†nh m·ªôt trong ba lo·∫°i: "order", "search", ho·∫∑c "chat"
        
        - order: Kh√°ch h√†ng mu·ªën ƒë·∫∑t mua s√°ch
        - search: Kh√°ch h√†ng mu·ªën t√¨m ki·∫øm th√¥ng tin s√°ch
        - chat: Tr√≤ chuy·ªán chung, h·ªèi ƒë√°p
        
        Tin nh·∫Øn: "{message}"
        
        Tr·∫£ v·ªÅ ch·ªâ m·ªôt t·ª´: order, search, ho·∫∑c chat
        """
    try:
        response = model.generate_content(prompt)
        intent = response.text.strip().lower()
        
        if intent in ['order', 'search', 'chat']:
            return intent
        else:
            return 'chat' 
    except:
        return 'chat'


import re, json

def extract_book_entities(message):
    """Tr√≠ch xu·∫•t th√¥ng tin s√°ch t·ª´ tin nh·∫Øn"""
    prompt = f"""
    T·ª´ tin nh·∫Øn sau, h√£y tr√≠ch xu·∫•t th√¥ng tin v·ªÅ s√°ch:
    - T√™n s√°ch/truy·ªán
    - T√°c gi·∫£  
    - Th·ªÉ lo·∫°i  
    Tin nh·∫Øn: "{message}"
    Tr·∫£ v·ªÅ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng JSON:
    {{
        "title": "t√™n s√°ch/truy·ªán ho·∫∑c None",
        "author": "t√°c gi·∫£ ho·∫∑c None", 
        "category": "th·ªÉ lo·∫°i ho·∫∑c None"
    }}
    """
    
    try:
        response = model.generate_content(prompt)
        json_text = response.text.strip()

        # lo·∫°i b·ªè ```json ... ```
        json_text = re.sub(r"```json\s*", "", json_text)
        json_text = re.sub(r"```", "", json_text)

        entities = json.loads(json_text)

        # ƒë·∫£m b·∫£o c√≥ ƒë·ªß key
        return {
            "title": entities.get("title"),
            "author": entities.get("author"),
            "category": entities.get("category")
        }
    except Exception as e:
        print("Extract error:", e)
        return {"title": None, "author": None, "category": None}


def generate_response_with_data(message, intent, book_data=None):
    """T·∫°o ph·∫£n h·ªìi t·ª´ AI v·ªõi d·ªØ li·ªáu s√°ch"""
    if intent == 'search' and book_data:
        prompt = f"""
            Kh√°ch h√†ng h·ªèi: "{message}"

            D·ªØ li·ªáu s√°ch t·ª´ c∆° s·ªü d·ªØ li·ªáu:
            {book_data}

            Y√™u c·∫ßu:
            - Ch·ªâ s·ª≠ d·ª•ng th√¥ng tin trong d·ªØ li·ªáu s√°ch.
            - N·∫øu kh√¥ng c√≥ s√°ch ph√π h·ª£p, tr·∫£ l·ªùi: "Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y s√°ch b·∫°n c·∫ßn."
            - N·∫øu c√≥ s√°ch, h√£y li·ªát k√™ ƒë·∫ßy ƒë·ªß theo ƒë·ªãnh d·∫°ng:

            **T√™n s√°ch** ‚Äì **T√°c gi·∫£**  
            üìö Th·ªÉ lo·∫°i: xxx  
            üí∞ Gi√°: xxx VNƒê  
            üì¶ S·ªë l∆∞·ª£ng: y cu·ªën  

            - Gi·ªØ vƒÉn phong ng·∫Øn g·ªçn, th√¢n thi·ªán, l·ªãch s·ª±.
        """
    else:
        prompt = f"""
        B·∫°n l√† chatbot b√°n h√†ng c·ªßa BookStore.  
        Nhi·ªám v·ª•: Tr·∫£ l·ªùi ng·∫Øn g·ªçn, th√¢n thi·ªán, l·ªãch s·ª±, t·∫≠p trung v√†o s√°ch v√† d·ªãch v·ª• mua b√°n c·ªßa c·ª≠a h√†ng.  

        Quy t·∫Øc:  
        1. Lu√¥n tr·∫£ l·ªùi theo ng·ªØ c·∫£nh "b√°n s√°ch". Kh√¥ng t∆∞ v·∫•n ngo√†i s√°ch ho·∫∑c c·ª≠a h√†ng.  
        2. N·∫øu kh√°ch t√¨m s√°ch ‚Üí H·ªèi chi ti·∫øt: t√™n s√°ch, t√°c gi·∫£, th·ªÉ lo·∫°i.  
        3. N·∫øu kh√°ch mu·ªën ƒë·∫∑t h√†ng ‚Üí H·ªèi r√µ t√™n s√°ch ƒë·ªÉ ki·ªÉm tra s·ªë l∆∞·ª£ng.  
        4. N·∫øu th√¥ng tin kh√¥ng thu·ªôc ph·∫°m vi (s√°ch/c·ª≠a h√†ng) ‚Üí Tr·∫£ l·ªùi: "Xin l·ªói, t√¥i kh√¥ng bi·∫øt v·ªÅ ƒëi·ªÅu ƒë√≥."  
        5. Kh√¥ng tr·∫£ l·ªùi d√†i d√≤ng. Tr√°nh gi·∫£i th√≠ch l√Ω thuy·∫øt. Ch·ªâ cung c·∫•p th√¥ng tin c·∫ßn thi·∫øt cho mua h√†ng.  
        H√£y tr·∫£ l·ªùi c√¢u h·ªèi sau c·ªßa kh√°ch h√†ng.
        C√¢u h·ªèi: {message}
        """
    try:
        response = model.generate_content(prompt)
        return response.text.strip()
    except:
        if intent == 'search':
            return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ t√¨m ki·∫øm s√°ch l√∫c n√†y. Vui l√≤ng th·ª≠ l·∫°i sau."
        elif intent == 'order':
            return "B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng n√∫t 'ƒê·∫∑t h√†ng' ƒë·ªÉ t·∫°o ƒë∆°n h√†ng m·ªõi!"
        else:
            return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ tr·∫£ l·ªùi l√∫c n√†y. Vui l√≤ng th·ª≠ l·∫°i sau."


